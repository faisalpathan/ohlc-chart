{"version":3,"sources":["utils/helpers.js","components/common/index.js","constants/index.js","services/rest.js","utils/parsers.js","services/sockets.js","utils/selectors.js","components/live-chart/index.js","components/historical-chart/index.js","AppStyles.js","App.js","reportWebVitals.js","index.js"],"names":["exponentialMovingAverage","windowSize","id","ema","options","merge","d","c","ema20","ema50","accessor","getXAndYGrid","margin","height","width","showGrid","gridHeight","top","bottom","gridWidth","left","right","innerTickSize","tickStrokeOpacity","ChartHoverToolTip","yAccessor","tooltipContent","type","stroke","currentItem","open","high","close","low","date","x","dayjs","format","y","label","value","toFixed","filter","line","fontSize","Axises","xGrid","yGrid","axisAt","orient","zoomEnabled","ticks","useResizeObserver","useState","observerEntry","setObserverEntry","node","setNode","observer","useRef","disconnect","useCallback","current","observe","ResizeObserver","entry","useLayoutEffect","BASE_PATH","BASE_API_PATH_REST","BASE_API_PATH_SOCKET","HISTORICAL_OHLC_CHART","LIVE_OHLC_CHART","fetchHistoricalData","a","axios","get","response","status","data","console","error","splitAndMapDataPoints","dataPointStr","currentDataPointSplit","split","volume","getFormattedDate","timestamp","removeRedundantTimestamp","sortedStockData","filteredDataBasedUponTimestamp","sortedStockDataLength","length","i","push","Date","prevTimestamp","currentTimestamp","socket","io","secure","dataPointsCallback","on","log","connected","subscribe","callback","emit","state","unsubscribe","fetchAndParsedHistoricalOHLCData","historicalData","parsedData","map","currentDataPoint","sortedDataByTimeStamp","sort","next","convertedStockDataForData","currentStockData","subscribeToLiveOHLCData","unSubscribeToLiveOHLCData","throttledSendLiveOHLCData","func","wait","prevTime","currentTime","getTime","throttle","dataPoint","dataPointObj","xAccessor","currentDatapoint","recordsTobeMaintained","LiveChart","forwardRef","props","ref","suffix","setSuffix","chartData","latestLiveChartData","setLatestLiveChartData","ratio","xExtents","useEffect","recordsTobeSliced","latestChartData","slice","last","seriesName","xScale","scaleTime","displayXAccessor","mouseMoveEvent","panEvent","zoomEvent","clamp","yExtents","timeIntervalBarWidth","utcSecond","onReset","currentSuffix","defaultProps","ResponsiveLiveChart","fitWidth","xScaleProvider","discontinuousTimeScaleProvider","inputDateAccessor","HistoricalChart","ResponsiveHistoricalChart","Container","styled","div","ChartWrapper","Tabs","Tab","section","isActive","spin","keyframes","LoaderWrapper","Loader","App","chartType","setChartType","setHistoricalData","liveData","setLiveData","getHistoricalData","handleCallbackOfDataPoints","parsedDataPoint","handleVisibilityChangeCallback","document","visibilityState","handleOnlineCallback","window","addEventListener","removeEventListener","toggleChartType","renderLoader","onClick","contentRect","innerWidth","ration","innerHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aaa750ff.chunk.js","sourcesContent":["\nimport dayjs from 'dayjs'\nimport { ema } from \"react-stockcharts/lib/indicator\";\n\nexport const throttle = function (func, wait) {\n    let prevTime = 0\n    return function executedFunction(...args) {\n        let currentTime = new Date().getTime()\n        if (currentTime - prevTime > wait) {\n            prevTime = currentTime\n            return func(...args)\n        }\n    }\n}\n\nexport const tooltipContent = () => {\n    return ({ currentItem }) => {\n        const { open = '', high = '', close = '', low = '', date = '' } = currentItem || {}\n        return {\n            x: date ? dayjs(date).format('ddd, MMM D, YYYY h:mm:ss A') : '',\n            y: [\n                {\n                    label: \"open\",\n                    value: open ? open.toFixed(2) : 0\n                },\n                {\n                    label: \"high\",\n                    value: high ? high.toFixed(2) : 0\n                },\n                {\n                    label: \"low\",\n                    value: low ? low.toFixed(2) : 0\n                },\n                {\n                    label: \"close\",\n                    value: close ? low.toFixed(2) : 0\n                }\n            ].filter(line => line.value)\n        };\n    };\n}\n\nexport const exponentialMovingAverage = (windowSize) => {\n    const id = windowSize === 20 ? 0 : 2\n    return ema()\n        .id(id)\n        .options({ windowSize })\n        .merge((d, c) => {\n            if (windowSize === 20) {\n                d.ema20 = c;\n            } else {\n                d.ema50 = c;\n            }\n        })\n        .accessor((d) => windowSize === 20 ? d.ema20 : d.ema50);\n}\n\n\nexport const getXAndYGrid = (margin, height, width, showGrid) => {\n\n    const gridHeight = height - margin.top - margin.bottom;\n    const gridWidth = width - margin.left - margin.right;\n\n    const yGrid = showGrid ? { innerTickSize: -1 * gridWidth, tickStrokeOpacity: 0.2 } : {};\n    const xGrid = showGrid ? { innerTickSize: -1 * gridHeight, tickStrokeOpacity: 0.2 } : {};\n\n    return [xGrid, yGrid]\n}\n","import { useRef, useLayoutEffect, useState, useCallback, Fragment } from 'react';\n\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { HoverTooltip } from \"react-stockcharts/lib/tooltip\";\nimport { tooltipContent, exponentialMovingAverage } from '../../utils/helpers'\n\nconst ema20 = exponentialMovingAverage(20)\nconst ema50 = exponentialMovingAverage(50)\n\nexport const ChartHoverToolTip = () => {\n    return (\n        <HoverTooltip\n            yAccessor={ema50.accessor()}\n            tooltipContent={tooltipContent([\n                {\n                    label: `${ema20.type()}(${ema20.options().windowSize})`,\n                    value: (d) => (ema20.accessor()(d)).toFixed(2),\n                    stroke: ema20.stroke()\n                },\n                {\n                    label: `${ema50.type()}(${ema50.options().windowSize})`,\n                    value: (d) => (ema50.accessor()(d)).toFixed(2),\n                    stroke: ema50.stroke()\n                }\n            ])}\n            fontSize={15}\n        />\n    )\n}\n\nexport const Axises = ({ xGrid, yGrid }) => {\n    return (\n        <Fragment>\n            <XAxis axisAt=\"bottom\" orient=\"bottom\" zoomEnabled={true} {...xGrid} />\n            <YAxis axisAt=\"left\" orient=\"left\" ticks={5} zoomEnabled={true} {...yGrid} />\n        </Fragment>\n    )\n}\n\nexport const useResizeObserver = () => {\n    const [observerEntry, setObserverEntry] = useState({});\n    const [node, setNode] = useState(null);\n    const observer = useRef(null);\n\n    const disconnect = useCallback(() => observer.current?.disconnect(), []);\n\n    const observe = useCallback(() => {\n        observer.current = new ResizeObserver(([entry]) => setObserverEntry(entry));\n        if (node) observer.current.observe(node);\n    }, [node]);\n\n    useLayoutEffect(() => {\n        observe();\n        return () => disconnect();\n    }, [disconnect, observe]);\n\n    return [setNode, observerEntry];\n};\n\nexport default useResizeObserver;\n\n","\nconst BASE_PATH = 'http://kaboom.rksv.net'\n\nexport const BASE_API_PATH_REST = `${BASE_PATH}/api`\nexport const BASE_API_PATH_SOCKET = `${BASE_PATH}/watch`\nexport const HISTORICAL_OHLC_CHART = 'HISTORICAL_OHLC_CHART'\nexport const LIVE_OHLC_CHART = 'LIVE_OHLC_CHART'","import axios from 'axios';\nimport { BASE_API_PATH_REST } from '../constants'\n\nexport const fetchHistoricalData = async () => {\n    try {\n        const response = await axios.get(`${BASE_API_PATH_REST}/historical`)\n        if (response.status === 200 && response.data) {\n            return response.data\n        }\n        return []\n    } catch (error) {\n        console.error(error)\n        return []\n    }\n}","\nimport dayjs from 'dayjs'\n\n\nexport const splitAndMapDataPoints = (dataPointStr) => {\n    const currentDataPointSplit = dataPointStr.split(',')\n    return {\n        date: +currentDataPointSplit[0],\n        open: +currentDataPointSplit[1] || 0,\n        high: +currentDataPointSplit[2] || 0,\n        low: +currentDataPointSplit[3] || 0,\n        close: +currentDataPointSplit[4] || 0,\n        volume: +currentDataPointSplit[5] || 0,\n    }\n}\n\nexport const parseResponse = (currentDataPoints) => {\n    return currentDataPoints.map(currentDataPoint => splitAndMapDataPoints(currentDataPoint))\n}\n\nexport const sortByTimeStamp = (parsedStockData) => {\n    return parsedStockData.sort((current, next) => current.date - next.date)\n}\n\nexport const convertEpochToDateObject = (stockData) => {\n    return stockData.map(currentStockData => ({\n        ...currentStockData,\n        date: new Date(currentStockData.date)\n    }))\n}\n\nexport const getFormattedDate = (timestamp) => {\n    if (timestamp) {\n        return dayjs(timestamp).format('DD-MM-YY HH:mm:ss')\n    }\n    return null\n}\n\nexport const removeRedundantTimestamp = (sortedStockData) => {\n    const filteredDataBasedUponTimestamp = []\n    const sortedStockDataLength = sortedStockData.length\n    for (let i = 0; i < sortedStockDataLength; i += 1) {\n        if (i === 0) {\n            filteredDataBasedUponTimestamp.push({\n                ...sortedStockData[0],\n                date: new Date(sortedStockData[0].date)\n            })\n        } else {\n            const prevTimestamp = sortedStockData[i - 1].date\n            const currentTimestamp = sortedStockData[i].date\n\n            const parsedCurrentTimeStamp = getFormattedDate(currentTimestamp)\n            const parsedPrevTimeStamp = getFormattedDate(prevTimestamp)\n\n            if (parsedCurrentTimeStamp > parsedPrevTimeStamp) {\n                filteredDataBasedUponTimestamp.push({\n                    ...sortedStockData[i],\n                    date: new Date(currentTimestamp)\n                })\n            }\n        }\n    }\n    return filteredDataBasedUponTimestamp\n}\n","import io from 'socket.io-client';\n\nimport { BASE_API_PATH_SOCKET } from '../constants'\nimport { throttledSendLiveOHLCData } from '../utils/selectors'\n\nconst socket = io(BASE_API_PATH_SOCKET, { secure: false });\n\nlet dataPointsCallback = () => { }\n\nsocket.on('connect', () => {\n    console.log(socket.connected);\n});\n\nsocket.subscribe = (callback) => {\n    dataPointsCallback = callback\n    socket.emit('sub', { state: true });\n}\n\nsocket.on('data', (data, callback) => {\n    dataPointsCallback(data)\n    // throttledSendLiveOHLCData(data)\n    callback(1);\n});\n\nsocket.unsubscribe = () => {\n    socket.emit('unsub', { state: false });\n}\n\nsocket.on('error', (data) => {\n    console.error(`Response: ${data}`)\n});\n\nexport default socket;\n","\nimport { fetchHistoricalData } from '../services/rest'\nimport { sortByTimeStamp, convertEpochToDateObject, parseResponse, splitAndMapDataPoints, removeRedundantTimestamp } from './parsers'\nimport { throttle } from './helpers'\nimport socket from '../services/sockets'\n\nexport const fetchAndParsedHistoricalOHLCData = async () => {\n    const historicalData = await fetchHistoricalData()\n    if (historicalData && historicalData.length) {\n        const parsedData = parseResponse(historicalData)\n        const sortedDataByTimeStamp = sortByTimeStamp(parsedData)\n        const filteredDataBasedUponTimestamp = removeRedundantTimestamp(sortedDataByTimeStamp)\n        const convertedStockDataForData = convertEpochToDateObject(filteredDataBasedUponTimestamp)\n        return convertedStockDataForData\n    } else {\n        return []\n    }\n}\n\nexport const subscribeToLiveOHLCData = (callback) => {\n    socket.subscribe(callback)\n}\n\nexport const unSubscribeToLiveOHLCData = () => {\n    socket.unsubscribe()\n}\n\nexport const parsedAndSetDataPoints = (dataPoint) => {\n    const dataPointObj = splitAndMapDataPoints(dataPoint)\n    dataPointObj.date = new Date(dataPointObj.date)\n    return dataPointObj\n}\n\nexport const throttledSendLiveOHLCData = throttle(parsedAndSetDataPoints, 1000)\n\n\n","import React, { useState, useEffect, forwardRef, useRef } from 'react'\nimport PropTypes from \"prop-types\";\nimport { ChartCanvas, Chart, ZoomButtons } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { utcSecond } from \"d3-time\";\nimport { scaleTime } from \"d3-scale\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\n\nimport { ChartHoverToolTip, Axises } from '../common'\n\nimport { unSubscribeToLiveOHLCData } from '../../utils/selectors';\nimport { getXAndYGrid } from '../../utils/helpers'\n\nconst xAccessor = currentDatapoint => currentDatapoint && currentDatapoint.date;\n\nconst margin = { left: 50, right: 20, top: 20, bottom: 30 };\n\nconst recordsTobeMaintained = {\n    desktop: 30,\n    mobile: 10\n}\n\nconst LiveChart = forwardRef((props, ref) => {\n    const [suffix, setSuffix] = useState(1)\n    const [latestLiveChartData, setLatestLiveChartData] = useState(props.chartData)\n    const { type, ratio, chartData, width, height, showGrid } = props;\n    const [xGrid, yGrid] = getXAndYGrid(margin, height, width, showGrid)\n    const xExtents = useRef([])\n\n    useEffect(() => {\n        let recordsTobeSliced = recordsTobeMaintained.desktop\n        if (width < 486) {\n            recordsTobeSliced = recordsTobeMaintained.mobile\n        }\n        const latestChartData = recordsTobeSliced ? chartData.slice(-recordsTobeSliced) : chartData;\n        setLatestLiveChartData(latestChartData)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [chartData.length])\n\n    useEffect(() => {\n        return () => unSubscribeToLiveOHLCData()\n    }, [])\n\n    xExtents.current = [\n        xAccessor(last(latestLiveChartData)),\n        xAccessor(latestLiveChartData[0])\n    ];\n\n    const handleReset = () => {\n        setSuffix(currentSuffix => currentSuffix + 1)\n    }\n\n    return (\n        <ChartCanvas\n            ref={ref}\n            height={height}\n            ratio={ratio}\n            width={width}\n            margin={margin}\n            type={type}\n            seriesName={`MSFT_${suffix}`}\n            data={latestLiveChartData}\n            xScale={scaleTime()}\n            xAccessor={xAccessor}\n            displayXAccessor={xAccessor}\n            xExtents={xExtents.current}\n            mouseMoveEvent={true}\n            panEvent={true}\n            zoomEvent={true}\n            clamp={false}\n        >\n            <ChartHoverToolTip />\n            <Chart id={1} yExtents={d => [d.high, d.low]}>\n                <Axises xGrid={xGrid} yGrid={yGrid} />\n                <CandlestickSeries width={timeIntervalBarWidth(utcSecond)} />\n                <ZoomButtons onReset={handleReset} />\n            </Chart>\n        </ChartCanvas>\n    )\n})\n\nLiveChart.propTypes = {\n    chartData: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n    ratio: PropTypes.number.isRequired,\n    showGrid: PropTypes.bool,\n    type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nLiveChart.defaultProps = {\n    type: \"svg\",\n    showGrid: true\n};\n\nconst ResponsiveLiveChart = fitWidth(LiveChart);\n\nexport default ResponsiveLiveChart;\n\n","import React, { useState, forwardRef, useRef } from 'react'\nimport PropTypes from \"prop-types\";\nimport { ChartCanvas, Chart, ZoomButtons } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last } from \"react-stockcharts/lib/utils\";\n\nimport { ChartHoverToolTip, Axises } from '../common'\nimport { getXAndYGrid } from '../../utils/helpers'\n\n\nconst margin = { left: 70, right: 70, top: 20, bottom: 30 }\n\nconst xScaleProvider = discontinuousTimeScaleProvider\n    .inputDateAccessor(d => d.date);\n\nconst HistoricalChart = forwardRef((props, ref) => {\n    const [suffix, setSuffix] = useState(1)\n    const { type, ratio, chartData, width, height, showGrid } = props;\n    const xExtents = useRef([])\n    const [xGrid, yGrid] = getXAndYGrid(margin, height, width, showGrid)\n\n    if (!chartData.length) {\n        return null\n    }\n\n    const {\n        data,\n        xScale,\n        xAccessor,\n        displayXAccessor,\n    } = xScaleProvider(chartData);\n\n    xExtents.current = [\n        xAccessor(last(data)),\n        xAccessor(data[data.length - 100])\n    ]\n\n    const handleReset = () => {\n        setSuffix(currentSuffix => currentSuffix + 1)\n    }\n\n    return (\n        <ChartCanvas\n            ref={ref}\n            height={height}\n            ratio={ratio}\n            width={width}\n            margin={margin}\n            type={type}\n            seriesName={`MSFT_${suffix}`}\n            data={data}\n            xScale={xScale}\n            xAccessor={xAccessor}\n            displayXAccessor={displayXAccessor}\n            xExtents={xExtents.current}\n            mouseMoveEvent\n            panEvent\n            zoomEvent\n            clamp={false}\n        >\n            <ChartHoverToolTip />\n            <Chart id={1} yExtents={d => [d.high, d.low]}>\n                <Axises xGrid={xGrid} yGrid={yGrid} />\n                <ZoomButtons onReset={handleReset} />\n                <CandlestickSeries />\n            </Chart>\n        </ChartCanvas>\n    )\n})\n\nHistoricalChart.propTypes = {\n    chartData: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n    ratio: PropTypes.number.isRequired,\n    type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nHistoricalChart.defaultProps = {\n    type: \"svg\",\n};\n\nconst ResponsiveHistoricalChart = fitWidth(HistoricalChart);\n\nexport default ResponsiveHistoricalChart;\n\n","import styled, { keyframes } from 'styled-components'\n\n\nexport const Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const ChartWrapper = styled.div`\n  height: calc(100vh - 30%);\n  width: calc(100vw - 10%);\n  margin: auto;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  border: 1px dashed #666666;\n`\n\nexport const Tabs = styled.div`\n  width: calc(100vw - 10%);\n  margin: auto;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgb(255, 255, 255);\n  display: flex;\n  justify-content: space-around;\n  height: 60px;\n  box-shadow: rgb(0, 0, 0) 0px 3px 6px -6px;\n`\n\nexport const Tab = styled.section`\n  border: none;\n  background: none;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  font-weight: 500;\n  width: 100%;\n  transition: all 0.2s ease 0s;\n  color: rgb(0, 120, 255);\n  border-bottom: ${props => props.isActive ? '2px solid rgb(0, 120, 255)' : 'none'};\n  cursor: pointer;\n`\n\nconst spin = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nexport const Loader = styled.div`\n  border: 16px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 16px solid #3498db;\n  width: 120px;\n  height: 120px;\n  animation: ${spin} 2s linear infinite;\n`","import React, { useEffect, useState } from 'react'\n\nimport LiveChart from './components/live-chart'\nimport HistoricalChart from './components/historical-chart'\nimport { useResizeObserver } from './components/common'\n\nimport { fetchAndParsedHistoricalOHLCData, throttledSendLiveOHLCData, subscribeToLiveOHLCData, unSubscribeToLiveOHLCData } from './utils/selectors'\nimport { HISTORICAL_OHLC_CHART, LIVE_OHLC_CHART } from './constants'\n\nimport { Container, ChartWrapper, Tabs, Tab, LoaderWrapper, Loader } from './AppStyles'\n\nconst App = () => {\n  const [chartType, setChartType] = useState(HISTORICAL_OHLC_CHART)\n  const [ref, entry] = useResizeObserver();\n  const [historicalData, setHistoricalData] = useState([])\n  const [liveData, setLiveData] = useState([])\n\n  const getHistoricalData = async () => {\n    const historicalData = await fetchAndParsedHistoricalOHLCData()\n    setHistoricalData(historicalData)\n  }\n\n  const handleCallbackOfDataPoints = (dataPoint) => {\n    if (dataPoint) {\n      const parsedDataPoint = throttledSendLiveOHLCData(dataPoint)\n      if (parsedDataPoint) {\n        setLiveData(liveData => [...liveData, parsedDataPoint])\n      }\n    }\n  }\n\n  const handleVisibilityChangeCallback = () => {\n    if (document.visibilityState === 'visible') {\n      subscribeToLiveOHLCData(handleCallbackOfDataPoints)\n    } else {\n      unSubscribeToLiveOHLCData()\n    }\n  }\n\n  const handleOnlineCallback = () => {\n    subscribeToLiveOHLCData(handleCallbackOfDataPoints)\n  }\n\n  useEffect(() => {\n    window.addEventListener('online', handleOnlineCallback);\n    document.addEventListener(\"visibilitychange\", handleVisibilityChangeCallback);\n    return () => {\n      window.removeEventListener('online', handleOnlineCallback);\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChangeCallback);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (chartType === HISTORICAL_OHLC_CHART) {\n      getHistoricalData()\n    } else {\n      subscribeToLiveOHLCData(handleCallbackOfDataPoints)\n    }\n  }, [chartType])\n\n  const toggleChartType = (type) => () => {\n    if (chartType === type) {\n      return\n    }\n    setChartType(type)\n  }\n\n  const renderLoader = () => {\n    return <LoaderWrapper><Loader /></LoaderWrapper>\n  }\n\n  const renderLiveChart = () => {\n    if (liveData.length > 1) {\n      return (\n        <LiveChart\n          width={entry.contentRect ? entry.contentRect.width : window.innerWidth}\n          ration={2}\n          type='hybrid'\n          chartData={liveData}\n          height={entry.contentRect ? entry.contentRect.height : window.innerHeight}\n          showGrid\n        />\n      )\n    }\n    return renderLoader()\n  }\n\n  const renderHistoricalChart = () => {\n    if (historicalData.length) {\n      return (\n        <HistoricalChart\n          width={entry.contentRect ? entry.contentRect.width : window.innerWidth}\n          ration={2}\n          type='hybrid'\n          chartData={historicalData}\n          height={entry.contentRect ? entry.contentRect.height : window.innerHeight}\n          showGrid\n        />\n      )\n    }\n    return renderLoader()\n  }\n\n  const renderTabs = () => {\n    return (\n      <Tabs>\n        <Tab onClick={toggleChartType(HISTORICAL_OHLC_CHART)} isActive={chartType === HISTORICAL_OHLC_CHART}>Historical Chart</Tab>\n        <Tab onClick={toggleChartType(LIVE_OHLC_CHART)} isActive={chartType === LIVE_OHLC_CHART}>Live Chart</Tab>\n      </Tabs>\n    )\n  }\n\n  return (\n    <Container>\n      {renderTabs()}\n      <ChartWrapper ref={ref}>\n        {\n          chartType === HISTORICAL_OHLC_CHART\n            ? renderHistoricalChart()\n            : renderLiveChart()\n        }\n      </ChartWrapper>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}